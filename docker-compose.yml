version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mycloud_backend
    labels:
      - "app=mycloud"
      - "service=backend"
    ports:
      - "8087:8089"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/devops"
      SPRING_DATASOURCE_USERNAME: devops_user
      SPRING_DATASOURCE_PASSWORD: devops_password
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mycloud_frontend
    labels:
      - "app=mycloud"
      - "service=frontend"
    ports:
      - "9091:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf  # Bind mount
      - ./frontend/dist/frontend:/usr/share/nginx/html/browser
    environment:
      API_URL: "http://backend:8089/api"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mycloud_mysql
    labels:
      - "app=mycloud"
      - "service=mysql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: devops
      MYSQL_USER: devops_user
      MYSQL_PASSWORD: devops_password
    ports:
      - "3308:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  prometheus:
    image: matrixuv/prometheus_hub:1.0.0
    container_name: mycloud_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: matrixuv/grafana_hub:1.0.0
    container_name: mycloud_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network

  sonarqube:
    image: matrixuv/sonarqube_hub:1.0.0
    container_name: mycloud_sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - app-network

  nexus:
    image: matrixuv/nexus_hub:1.0.0
    container_name: mycloud_nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - app-network

volumes:
  mysql-data:
  sonarqube_data:
  sonarqube_extensions:
  nexus-data:

networks:
  app-network:
    name: mycloud_app_network
